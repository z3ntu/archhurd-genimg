#!/bin/sh -eux

cleanup() {
	sync || true
	settrans -gR /mnt || true
	settrans -fg /dev/loop0s1 || true
	settrans -fg /dev/loop0 || true
}
trap cleanup EXIT

rm -f disk.img
# 900M seems to be enough for Arch
truncate -s 900M disk.img

# Create translator for file
settrans -ca /dev/loop0 /hurd/storeio -T typed file:disk.img

# Partition setup
parted -a optimal -s /dev/loop0 -- mklabel msdos
parted -a optimal -s /dev/loop0 -- mkpart primary ext2 32256B -1
parted -a optimal -s /dev/loop0 -- set 1 boot on

# Create translator for partition
settrans -ca /dev/loop0s1 /hurd/storeio -T typed part:1:file:disk.img

# Format as ext2 and mount
mkfs.ext2 /dev/loop0s1
mount -t ext2 /dev/loop0s1 /mnt

# Set up some tranlsators for the new image
mkdir -p /mnt/servers/socket
mkdir -p /mnt/dev
settrans -c /mnt/servers/socket/1 /hurd/pflocal
settrans -c /mnt/dev/null /hurd/null

pacstrap /mnt --needed base grub vim openrc dde netdde

run_root() {
        chroot /mnt /usr/bin/env \
                PATH=/sbin:/usr/sbin:/bin:/usr/bin \
                /bin/sh -c "$*"
}

# Install GRUB
# It's done manually as grub-install doesn't seem to like "loop" devices on the Hurd
mkdir -p /mnt/boot/grub/i386-pc
cp /usr/lib/grub/i386-pc/* /mnt/boot/grub/i386-pc/
# Generate core.img
grub-mkimage -O i386-pc -o /mnt/boot/grub/i386-pc/core.img -d /mnt/boot/grub/i386-pc -p '(hd0,msdos1)/boot/grub' biosdisk part_msdos ext2
# Install images to disk
grub-bios-setup -d /mnt/boot/grub/i386-pc /dev/loop0
# Generate and fix up GRUB config
run_root grub-mkconfig -o /boot/grub/grub.cfg
sed -i 's|loop0s1|hd0s1|g' /mnt/boot/grub/grub.cfg

# Install some extra files
cp -v fstab /etc/
cp -v runsystem /mnt/usr/lib/
cp -v hurd-console /mnt/etc/init.d/
run_root rc-update add hurd-console default
patch -N -i ./etc_init.d_root.diff /mnt/etc/init.d/root

run_root "cd /dev && MAKEDEV console"
